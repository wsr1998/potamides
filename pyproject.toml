[project]
  name = "potamides"
  authors = [
    { name = "Jacob Nibauer", email = "jnibauer@princeton.edu" },
    { name = "Nathaniel Starkman", email = "starkman@mit.edu" },
    { name = "Sirui", email = "gnx996@ku.dk" },
  ]
  description = "Constrain gravitational potential with stream curvature"
  readme = "README.md"
  requires-python = ">=3.11"
  classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
  ]
  dynamic = [
    "version",
  ]
  dependencies = [
    "astropy>=6.1.7",
    "galax",
    "interpax>=0.3.7",
    "jax<0.4.36",
    "jaxtyping>=0.2.38",
    "matplotlib>=3.10.1",
    "numpy>=2.2.3",
    "optax>=0.2.4",
    "scipy>=1.15.2",
    "typing-extensions>=4.12.2",
    "unxt>=1.3.2",
    "xmmutablemap>=0.1",
  ]

  [project.urls]
    Homepage      = "https://github.com/wsr1998/potamides"
    "Bug Tracker" = "https://github.com/wsr1998/potamides/issues"
    Discussions   = "https://github.com/wsr1998/potamides/discussions"
    Changelog     = "https://github.com/wsr1998/potamides/releases"


[dependency-groups]
  test = [
    "optional-dependencies>=0.3.2",
    "pytest >=6",
    "pytest-arraydiff>=0.6.1",
    "pytest-cov >=3",
    "sybil>=9.1.0",
  ]
  dev = [
    "ipykernel>=6.29.5",
    "pre-commit>=4.1.0",
    "pytest >=8",
    "pytest-cov >=3",
  ]
  docs = [
    "furo>=2023.08.17",
    "myst_parser>=0.13",
    "sphinx>=7.0",
    "sphinx_autodoc_typehints",
    "sphinx_copybutton",
  ]


[build-system]
  requires = [
    "hatch-vcs",
    "hatchling",
  ]
  build-backend = "hatchling.build"


[tool.hatch]
  version.source               = "vcs"
  build.hooks.vcs.version-file = "src/potamides/_version.py"


[tool.uv.sources]
  galax = { git = "https://github.com/GalacticDynamics/galax.git" }


[tool.pytest.ini_options]
  minversion = "6.0"
  addopts = [
    "--showlocals",
    "--strict-config",
    "--strict-markers",
    "-p no:doctest",    # using sybil
    "-ra",
    "--arraydiff",
    "--arraydiff-reference-path=tests/data"
  ]
  xfail_strict = true
  filterwarnings = [
    "error",
  ]
  log_cli_level = "INFO"
  testpaths = [
    "src",
    "tests",
    "docs",
  ]


[tool.coverage]
  run.source = [
    "potamides",
  ]
  report.exclude_also = [
    '\.\.\.',
    'if typing.TYPE_CHECKING:',
  ]

[tool.mypy]
  files = [
    "src",
    "tests",
  ]
  python_version = "3.11"
  warn_unused_configs = true
  strict = true
  enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
  ]
  warn_unreachable = true
  disallow_untyped_defs = false
  disallow_incomplete_defs = false

  [[tool.mypy.overrides]]
    module = "potamides.*"
    disallow_untyped_defs = true
    disallow_incomplete_defs = true
    disable_error_code = [
      "name-defined",
    ]

  [[tool.mypy.overrides]]
    module = [
      "equinox.*",
      "galax.*",
      "interpax.*",
      "jax.*",
      "jaxtyping.*",
      "matplotlib.*",
      "numpy.*",
      "optax.*",
      "scipy.*",
      "unxt.*",
      "xmmutablemap.*",
    ]
    ignore_missing_imports = true


[tool.ruff]

  [tool.ruff.lint]
    extend-select = [
      "ARG", # flake8-unused-arguments
      "B",   # flake8-bugbear
      "C4",  # flake8-comprehensions
      "EM",  # flake8-errmsg
      "EXE", # flake8-executable
      "G",   # flake8-logging-format
      "I",   # isort
      "ICN", # flake8-import-conventions
      "NPY", # NumPy specific rules
      "PD",  # pandas-vet
      "PGH", # pygrep-hooks
      "PIE", # flake8-pie
      "PL",  # pylint
      "PT",  # flake8-pytest-style
      "PTH", # flake8-use-pathlib
      "RET", # flake8-return
      "RUF", # Ruff-specific
      "SIM", # flake8-simplify
      "T20", # flake8-print
      "UP",  # pyupgrade
      "YTT", # flake8-2020
    ]
    ignore = [
      "B008",    # Do not perform function call in argument defaults;
      "COM812",  # Add trailing comma
      "EXE002",  # executable file missing shebang
      "F722",    # reason: ruff doesn't like jaxtyping annotations
      "F821",    # Undefined name. reason: jaxtyping annotations
      "PD",      # Pandas
      "PLR09",   # Too many <...>
      "PLR2004", # Magic value used in comparison
      "RET504",  # Unnecessary assignment before `return` statement
      "RUF003",  # doesn't like chinese commasx
    ]

    [tool.ruff.lint.per-file-ignores]
      "tests/**" = [
        "T20",
      ]
      "noxfile.py" = [
        "T20",
      ]


[tool.pylint]
  py-version = "3.9"
  ignore-paths = [
    ".*/_version.py",
  ]
  reports.output-format = "colorized"
  similarities.ignore-imports = "yes"
  messages_control.disable = [
    "design",
    "fixme",
    "line-too-long",
    "missing-function-docstring",
    "missing-module-docstring",
    "wrong-import-position",
  ]
